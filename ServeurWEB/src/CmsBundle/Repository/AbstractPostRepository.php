<?php

namespace CmsBundle\Repository;

/**
 * PostRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
abstract class AbstractPostRepository extends BaseRepository
{

    /**
     * @param array $criterias
     * @param array $orders
     * @param array $numbers
     * @param array $options
     * @return QueryBuilder
     */
    public function findMany($criterias = array(), $orders = array(), $numbers = array(), $options = array())
    {
        $qb = $this->createQueryBuilder('o');


        if (isset($criterias['published'])) {
            $qb->andWhere('o.published = :published')->setParameter('published', $criterias['published']);
            $qb->andWhere('o.publishedStart < :publishedStart')->setParameter('publishedStart', new \DateTime('now'));
        }

        if (isset($numbers['offset']) and isset($numbers['limit'])) {
            $qb->setFirstResult($numbers['offset']);
            $qb->setMaxResults($numbers['limit']);
        }

        // orders
        if (empty($orders) and !isset($options['top'])) {
            $qb->orderBy('o.position', 'DESC');
        } else {
            foreach ($orders as $key => $value) {
                $qb->orderBy('o.'.$key, $value);
            }
        }


        if (!isset($options['removeTranslations'])) {
            $qb->leftJoin('o.translations', 'translations')->addSelect('translations');
        }

        return $qb;
    }

    /**
     * @param array $criterias
     * @param array $options
     * @return QueryBuilder
     */
    public function findOne($criterias = array(), $options = array())
    {
        $qb = $this->createQueryBuilder('o');

        $qb->leftJoin('o.cover', 'cover')->addSelect('cover');
        $qb->leftJoin('o.fields', 'fields')->addSelect('fields');
        $qb->leftJoin('o.pictures', 'pictures')->addSelect('pictures');
        $qb->leftJoin('pictures.media', 'pictureMedia')->addSelect('pictureMedia');
        $qb->leftJoin('o.videos', 'videos')->addSelect('videos');
        $qb->leftJoin('videos.media', 'videoMedia')->addSelect('videoMedia');
        $qb->leftJoin('o.files', 'files')->addSelect('files');
        $qb->leftJoin('files.media', 'fileMedia')->addSelect('fileMedia');
        $qb->leftJoin('o.translations', 'translations')->addSelect('translations');


        if (isset($criterias['slug'])) {
            $qb->andWhere('o.slug=:slug')->setParameter('slug', $criterias['slug']);
        }

        if (isset($criterias['published'])) {
            $qb->andWhere('o.published = :published')->setParameter('published', $criterias['published']);
            $qb->andWhere('o.publishedStart < :publishedStart')->setParameter('publishedStart', new \DateTime('now'));
        }

        return $qb;
    }

}
